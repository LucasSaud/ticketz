image: docker:20.10.16

stages:
  - build
  - tag-images

variables:
  REGISTRY: "ghcr.io"
  IMAGE_BACKEND: "ticketz-oss/ticketz-backend"
  IMAGE_FRONTEND: "ticketz-oss/ticketz-frontend"
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
services:
  - docker:20.10.16-dind

before_script:
  - export BASE_TAG=$(echo $CI_COMMIT_TAG | sed 's/^v//;s/-.*$//')
  - export SUFFIX=$(echo $CI_COMMIT_TAG | sed 's/^v[^-]*-//')
  - export TAG_MAJOR=$(echo $BASE_TAG | cut -d'.' -f1)
  - export TAG_MINOR=$(echo $BASE_TAG | cut -d'.' -f1,2)
  - export TAG_PATCH=$(echo $BASE_TAG | cut -d'.' -f1,2,3)
  - export BUILD_TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
  - docker login $REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  - docker run --privileged --rm tonistiigi/binfmt --install all
  - docker buildx create --name mybuilder --use
  - docker buildx inspect --bootstrap
  
build-backend-amd64:
  stage: build
  only:
    - /^.*-(pro|theme)+$/
  script:
    - |
      cat <<EOT > backend/src/gitinfo.ts
      export const GitInfo = {
          commitHash: "$CI_COMMIT_SHORT_SHA",
          commitTimestamp: "",
          branchName: "$CI_COMMIT_REF_NAME",
          tagName: "$CI_COMMIT_TAG",
          buildTimestamp: "$BUILD_TIMESTAMP"
      };
      EOT
    - |
      docker buildx build --platform linux/amd64 --push \
        -t $REGISTRY/$IMAGE_FRONTEND:amd64-$CI_COMMIT_SHORT_SHA backend

build-backend-arm64:
  stage: build
  only:
    - /^.*-(pro|theme)+$/
  script:
    - |
      cat <<EOT > backend/src/gitinfo.ts
      export const GitInfo = {
          commitHash: "$CI_COMMIT_SHORT_SHA",
          commitTimestamp: "",
          branchName: "$CI_COMMIT_REF_NAME",
          tagName: "$CI_COMMIT_TAG",
          buildTimestamp: "$BUILD_TIMESTAMP"
      };
      EOT
    - |
      docker buildx build --platform linux/arm64 --push \
        -t $REGISTRY/$IMAGE_FRONTEND:arm64-$CI_COMMIT_SHORT_SHA backend

build-frontend-amd64:
  stage: build
  only:
    - /^.*-(pro|theme)+$/
  script:
    - |
      cat <<EOT > frontend/public/gitinfo.json
      {
          "commitHash": "$CI_COMMIT_SHORT_SHA",
          "commitTimestamp": "",
          "branchName": "$CI_COMMIT_REF_NAME",
          "tagName": "$CI_COMMIT_TAG",
          "buildTimestamp": "$BUILD_TIMESTAMP"
      }
      EOT
    - |
      docker buildx build --platform linux/amd64 --push \
        -t $REGISTRY/$IMAGE_FRONTEND:amd64-$CI_COMMIT_SHORT_SHA frontend

build-frontend-arm64:
  only:
    - /^.*-(pro|theme)+$/
  stage: build
  script:
    - |
      cat <<EOT > frontend/public/gitinfo.json
      {
          "commitHash": "$CI_COMMIT_SHORT_SHA",
          "commitTimestamp": "",
          "branchName": "$CI_COMMIT_REF_NAME",
          "tagName": "$CI_COMMIT_TAG",
          "buildTimestamp": "$BUILD_TIMESTAMP"
      }
      EOT
    - |
      docker buildx build --platform linux/arm64 --push \
        -t $REGISTRY/$IMAGE_FRONTEND:arm64-$CI_COMMIT_SHORT_SHA frontend

        
tag-images:
  stage: tag-images
  only:
    - /^.*-(pro|theme)+$/
  script:
    - |
      docker buildx imagetools create \
        --tag $REGISTRY/$IMAGE_BACKEND:$TAG_PATCH-$SUFFIX \
        --tag $REGISTRY/$IMAGE_BACKEND:$TAG_MINOR-$SUFFIX \
        --tag $REGISTRY/$IMAGE_BACKEND:$TAG_MAJOR-$SUFFIX \
        --tag $REGISTRY/$IMAGE_BACKEND:$SUFFIX \
        $REGISTRY/$IMAGE_BACKEND:amd64-$CI_COMMIT_SHORT_SHA \
        $REGISTRY/$IMAGE_BACKEND:arm64-$CI_COMMIT_SHORT_SHA
    - |
      docker buildx imagetools create \
        --tag $REGISTRY/$IMAGE_FRONTEND:$TAG_PATCH-$SUFFIX \
        --tag $REGISTRY/$IMAGE_FRONTEND:$TAG_MINOR-$SUFFIX \
        --tag $REGISTRY/$IMAGE_FRONTEND:$TAG_MAJOR-$SUFFIX \
        --tag $REGISTRY/$IMAGE_FRONTEND:$SUFFIX \
        $REGISTRY/$IMAGE_FRONTEND:amd64-$CI_COMMIT_SHORT_SHA \
        $REGISTRY/$IMAGE_FRONTEND:arm64-$CI_COMMIT_SHORT_SHA
